#Configuration file for the simulation indicating which network will be simulated, the sim duration etc
[General]

network = org.cl.simulations.NodeNetwork
record-eventlog = true
sim-time-limit = 5s
**.display-name = 
**.display-string = 


NodeNetwork.number_of_nodes=1
**.number_of_ports=1 #numero di porte del nodo
**.controller.number_of_ports=1 #numero di porte del controller (deve essere uguale a number_of_ports)

#*.node[0].controller.attr=value per settare valori per specifici nodi nel vettore di noti ned della rete
#Reward parameters
*.node[*].controller.pkt_drop_cost_A= 1 #Defined as A*x + B
*.node[*].controller.pkt_drop_cost_B= 1
*.node[*].controller.queue_occ_cost_A= 1 #Defined as A*x + B
*.node[*].controller.queue_occ_cost_B= 1
*.node[*].controller.pkt_drop_penalty_weight=${1/3}
*.node[*].controller.queue_occ_penalty_weight=${1/3}
*.node[*].controller.energy_penalty_weight=${1/3}

# distribution is expected to return a continous value between 0 and 1
# TODO: maybe an uniform is not the best choice. If the charger depends on
# the environment, we expect a value that do not change so much in short time,
# instead it should show a trend.
**.controller.battery_charge_rate_distribution=uniform(0, 1)
**.controller.charge_battery_timeout_delta=0.5s
**.controller.ask_action_timeout_delta=0.1s
**.controller.data_buffer_capacity=3
**.controller.max_neighbours=10
**.controller.link_cap=1Mbps
**.controller.power_models={
    # https://fcc.report/FCC-ID/2AQ7Q-DB50475/5101472.pdf
    intel_dualband_wireless_AC_7256: {
        tx_mW: 32mW,
        idle_mW: 7mW
        }
    }
**.controller.power_source_models={
        # https://www.belkin.com/support-article/?articleNum=335925
        belkin_BPB001_powerbank: {
            cap_mWh: 50000mWh,
            cost_per_mWh: 0
        },
        power_chord_standard: {
            cap_mWh: inf,
            cost_per_mWh: 10
        },
        solar_panel: {
            cap_mWh: 1000mWh, # intended as charge output in best conditions
            cost_per_mWh: 0
        }
    }
*.node[*].num_queues=2
*.node[*].queues[*].capacity=2
# queue priority is given by its position in the node queue array
*.node[*].queues[*].priority=ancestorIndex(0)

#srcNode parameters
**.srcNode[*].srcController.send_interval=exponential(12)
    